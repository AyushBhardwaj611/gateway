spring.application.name=gateway

server.port=8080

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

spring.cloud.gateway.routes[0].id=productservice
spring.cloud.gateway.routes[0].uri=lb://productservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/products/**


#gives the id of the service in the list
#if the request comes on this condition
#forward the request on this uri
#lb://<server_name> --> means do the load balancing while fetching the ip addresses from the eureka service discovery

spring.cloud.gateway.routes[1].id=authenticationservice        
#spring.cloud.gateway.routes[1].predicates[0]=Path=/auth/**
#spring.cloud.gateway.routes[1].predicates[1]=Path=/users/**
#spring.cloud.gateway.routes[1].predicates[2]=Path=/login
#spring.cloud.gateway.routes[1].predicates[3]=Path=/signup
spring.cloud.gateway.routes[1].uri=lb://authenticationservice

logging.level.*=trace
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.access=unrestricted


#NOTE --> if we put the paths seperately then an AND condition will be invoked
#for an OR condition...put comma(,) adn you are good to go